SubjID_24_MotorEM_Test<-data.frame(SubjID_24_MotorEM_Test$alldata_Test)
SubjID_25_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_25_MotorEM(2023)TEST_.mat")
SubjID_25_MotorEM_Test<-data.frame(SubjID_25_MotorEM_Test$alldata_Test)
SubjID_26_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_26_MotorEM(2023)TEST_.mat")
SubjID_26_MotorEM_Test<-data.frame(SubjID_26_MotorEM_Test$alldata_Test)
cfg1<-data.frame(SubjID_26_MotorEM_Test[["cfg"]])
SubjID_27_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_27_MotorEM(2023)TEST_.mat")
SubjID_27_MotorEM_Test<-data.frame(SubjID_27_MotorEM_Test$alldata_Test)
SubjID_28_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_28_MotorEM(2023)TEST_.mat")
SubjID_28_MotorEM_Test<-data.frame(SubjID_28_MotorEM_Test$alldata_Test)
SubjID_29_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_29_MotorEM(2023)TEST_.mat")
SubjID_29_MotorEM_Test<-data.frame(SubjID_29_MotorEM_Test$alldata_Test)
SubjID_30_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_30_MotorEM(2023)TEST_.mat")
SubjID_30_MotorEM_Test<-data.frame(SubjID_30_MotorEM_Test$alldata_Test)
SubjID_31_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_31_MotorEM(2023)TEST_.mat")
SubjID_31_MotorEM_Test<-data.frame(SubjID_31_MotorEM_Test$alldata_Test)
data<-rbind(SubjID_1_MotorEM_Test,SubjID_2_MotorEM_Test,SubjID_3_MotorEM_Test,SubjID_4_MotorEM_Test,SubjID_5_MotorEM_Test,
SubjID_6_MotorEM_Test,SubjID_7_MotorEM_Test,SubjID_8_MotorEM_Test,SubjID_9_MotorEM_Test,SubjID_10_MotorEM_Test,
SubjID_11_MotorEM_Test,SubjID_12_MotorEM_Test,SubjID_13_MotorEM_Test,SubjID_14_MotorEM_Test,SubjID_15_MotorEM_Test,
SubjID_16_MotorEM_Test,SubjID_17_MotorEM_Test,SubjID_18_MotorEM_Test,SubjID_19_MotorEM_Test,SubjID_20_MotorEM_Test,
SubjID_21_MotorEM_Test,SubjID_22_MotorEM_Test,SubjID_23_MotorEM_Test,SubjID_24_MotorEM_Test,SubjID_25_MotorEM_Test,
SubjID_26_MotorEM_Test,SubjID_27_MotorEM_Test,SubjID_28_MotorEM_Test,SubjID_29_MotorEM_Test,SubjID_30_MotorEM_Test,
SubjID_31_MotorEM_Test)
colnames(data)<-c("SubjID","Age",   "Sex"  ,  "Block" ,   "Session"  ,  "Trial_Index"   , "Trial_Number" ,  "ITI"   ,
"ReactPeriod" ,   "Device" ,  "R_Lhanded"  , "MotorSide" , "MotorInvolvement",  "TrialTotalTime" ,   "ActionTiming",
"ActionDataDelayToStart" ,   "ActionDataDelayToEnd",   "ActionDataConfidenceReaction"  , "ActionDataConfidenceXaxis",
"ActionDataConfidenceYaxis"  ,  "HandDominance" ,  "ArmDominance"  ,   "LegDominance"  ,  "Motor_coordination",
"Gaming_frequency" , "Gaming_type"   ,  "Music" ,  "Inst_type"  , "CutOff",  "Std_Timing" ,   "Std_Reacting",    "Mean_Reacting",
"Feedback")
### Fixing - Cleaning the data
data$Inst_type[data$SubjID==29]<-0
data$Feedback[is.na(data$Feedback)] <- -1  # Use is.na() instead of == NA
data<-subset(data, ActionTiming!='NaN')
data$Block<-factor(data$Block)
levels(data$Block) <- list("ReactingG" = 2,        # Change factor levels
"TimingG" = 1)
data$Device<-factor(data$Device)
levels(data$Device) <- list("RightJoy" = 0,        # Change factor levels
"LeftJoy" = 1)
data$R_Lhanded<-factor(data$R_Lhanded)
levels(data$R_Lhanded) <- list("LHanded" = 2,        # Change factor levels
"RHanded" = 1)
data$MotorSide<-factor(data$MotorSide)
levels(data$MotorSide) <- list("DS" = 1,        # Change factor levels
"NDS" = 2)
data$MotorInvolvement<-factor(data$MotorInvolvement)
levels(data$MotorInvolvement) <- list("Move" = 1,        # Change factor levels
"Press" = 2)
data$SubjID<-factor(data$SubjID)
data_timing<- subset(data, Block== "TimingG" )
data_reacting<- subset(data, Block== "ReactingG" )
################################### Measures  ###################################
# Clean data a bit more:
## below 200 ms remove! Actual timings
data_timing <- subset(data_timing, ActionTiming >= 0.5)
data_timing <- ddply(data_timing, .(SubjID,Session), mutate, ActionTiming_z = (ActionTiming- mean(ActionTiming)) /sd(ActionTiming))
data_timing<- subset(data_timing, ActionTiming_z<3 & ActionTiming_z>-3)
data_reacting <- ddply(data_reacting, .(SubjID,Session), mutate, ActionTiming_z = (ActionTiming- mean(ActionTiming)) /sd(ActionTiming))
data_reacting<- subset(data_reacting, ActionTiming_z<3 &ActionTiming_z>-3)
data_timing <- ddply(data_timing, .(SubjID), mutate, ActionDataConfidenceReaction_z = (ActionDataConfidenceReaction- mean(ActionDataConfidenceReaction)) /sd(ActionDataConfidenceReaction))
data_timing<- subset(data_timing, ActionDataConfidenceReaction_z<3 &ActionDataConfidenceReaction_z>-3)
data_reacting <- ddply(data_reacting, .(SubjID), mutate, ActionDataConfidenceReaction_z = (ActionDataConfidenceReaction- mean(ActionDataConfidenceReaction)) /sd(ActionDataConfidenceReaction))
data_reacting<- subset(data_reacting, ActionDataConfidenceReaction_z<3 &ActionDataConfidenceReaction_z>-3)
# Group data and create confidence levels
data_timing$ActionDataConfidenceYaxis_percent = ((1275 - data_timing$ActionDataConfidenceYaxis) * 100) / 1200
data_reacting$ActionDataConfidenceYaxis_percent = ((1275 - data_reacting$ActionDataConfidenceYaxis) * 100) / 1200
data_timing$ActionDataConfidenceXaxis=(data_timing$ActionDataConfidenceXaxis/10)-120
data_reacting$ActionDataConfidenceXaxis=(data_reacting$ActionDataConfidenceXaxis/10)-120
data_timing$ActionDataConfidenceYaxis=-1*((data_timing$ActionDataConfidenceYaxis/10)-67.5)
data_reacting$ActionDataConfidenceYaxis=-1*((data_reacting$ActionDataConfidenceYaxis/10)-67.5)
group_and_conf_level <- function(data) {
data %>%
group_by(SubjID, Session) %>%
mutate(conf_level = ifelse(ActionDataConfidenceYaxis <= median(ActionDataConfidenceYaxis), "Low", "High")) %>%
mutate(conf_level = factor(conf_level, levels = c( "Low", "High"))) %>%
mutate(overall_motor_rate = Gaming_frequency + Motor_coordination) %>%
mutate(motor_rate = ifelse(overall_motor_rate <= median(overall_motor_rate), "Low", "High")) %>%
mutate(motor_rate = factor(motor_rate, levels = c("Low", "High")))
}
data_timing <- group_and_conf_level(data_timing)
data_reacting <- group_and_conf_level(data_reacting)
data_timing <- data_timing %>%                                        # Create SessionID by group
group_by(SubjID,Session) %>%
dplyr::mutate(SessionID = cur_group_id())
data_timing
library(dplyr)
new <- data_timing %>%
group_by(SessionID) %>%  # Group by SessionID to isolate calculations
mutate(PreviousFeedback = lag(Feedback, 1)) %>%  # Use lag to get previous feedback for each session
ungroup() %>%
mutate(PreviousFeedback = ifelse(Trial_Number == 1, NA, PreviousFeedback))  # Set PreviousFeedback to NA for the first trial
library(dplyr)
new <- data_timing %>%
group_by(SessionID) %>%  # Group by SessionID to isolate calculations
mutate(PreviousFeedback = lag(Feedback, 1)) %>%  # Use lag to get previous feedback for each session
ungroup() %>%
mutate(PreviousFeedback = ifelse(Trial_Number == 1, NA, PreviousFeedback))  # Set PreviousFeedback to NA for the first trial
View(new)
View(data_timing)
length(unique(new$PreviousFeedback[!is.na(new$PreviousFeedback)]))
length(unique(new$PreviousFeedback[new$PreviousFeedback==NA]))
length(unique(new$PreviousFeedback[new$PreviousFeedback=="NA"]))
library(rmatio)
library(BiocManager)
library(installr)
library(lme4)
library(sjPlot)
library(car)
library(tidyverse)
library(devtools)
library(hrbrthemes)
library(viridis)
library(R.matlab)
library(readr)
library(broom.mixed)
library(ggplot2)
library(haven)
library(readr)
library(sjstats)
library(sjmisc)
library(sjlabelled)
library(gridExtra)
library(data.table)
library(gapminder)
library(rstatix)
library(scales)
library(tidyr)
library(emmeans)
library(plotly)
library(ggpubr)
library(dplyr)
library(plyr)
library(zoo)
library(patchwork)
library(R.matlab)
library(interactions)
library(lmerTest)
library(gridExtra)
library(Matrix)
library(rmatio)
library(cowplot)
library(reshape2)
library(ggeffects)
library(robust)
library(effects)
library(tableHTML)
library(magrittr)
library(ggbreak)
library(ggiraphExtra)
library(ggpmisc)
library(robustbase)
library(ggplotify)
library(ggplotlyExtra)
library(ggiraph)
library(jtools)
library(ggpmisc)
library(caret)
library(BBmisc)
library(splines)
library(ggforce)
library(ggdist)
library(gghalves)
library(ggbeeswarm)
library(BiocManager)
library(rhdf5)
# read in our data
SubjID_1_MotorEM_Test<- readMat("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_1_MotorEM(2023)TEST_.mat")
SubjID_1_MotorEM_Test<-data.frame(SubjID_1_MotorEM_Test[["alldata.Test"]])
cfg1<-data.frame(SubjID_1_MotorEM_Test[["cfg"]])
SubjID_2_MotorEM_Test <- readMat("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_2_MotorEM(2023)TEST_.mat")
SubjID_2_MotorEM_Test<-data.frame(SubjID_2_MotorEM_Test[["alldata.Test"]])
SubjID_3_MotorEM_Test <- readMat("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_3_MotorEM(2023)TEST_.mat")
SubjID_3_MotorEM_Test<-data.frame(SubjID_3_MotorEM_Test[["alldata.Test"]])
SubjID_4_MotorEM_Test <- readMat("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_4_MotorEM(2023)TEST_.mat")
SubjID_4_MotorEM_Test<-data.frame(SubjID_4_MotorEM_Test[["alldata.Test"]])
SubjID_5_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_5_MotorEM(2023)TEST_.mat")
SubjID_5_MotorEM_Test<-data.frame(SubjID_5_MotorEM_Test$alldata_Test)
SubjID_6_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_6_MotorEM(2023)TEST_.mat")
SubjID_6_MotorEM_Test<-data.frame(SubjID_6_MotorEM_Test$alldata_Test)
SubjID_7_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_7_MotorEM(2023)TEST_.mat")
SubjID_7_MotorEM_Test<-data.frame(SubjID_7_MotorEM_Test$alldata_Test)
SubjID_8_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_8_MotorEM(2023)TEST_.mat")
SubjID_8_MotorEM_Test<-data.frame(SubjID_8_MotorEM_Test$alldata_Test)
SubjID_9_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_9_MotorEM(2023)TEST_.mat")
SubjID_9_MotorEM_Test<-data.frame(SubjID_9_MotorEM_Test$alldata_Test)
SubjID_10_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_10_MotorEM(2023)TEST_.mat")
SubjID_10_MotorEM_Test<-data.frame(SubjID_10_MotorEM_Test$alldata_Test)
SubjID_11_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_11_MotorEM(2023)TEST_.mat")
SubjID_11_MotorEM_Test<-data.frame(SubjID_11_MotorEM_Test$alldata_Test)
SubjID_12_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_12_MotorEM(2023)TEST_.mat")
SubjID_12_MotorEM_Test<-data.frame(SubjID_12_MotorEM_Test$alldata_Test)
SubjID_13_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_13_MotorEM(2023)TEST_.mat")
SubjID_13_MotorEM_Test<-data.frame(SubjID_13_MotorEM_Test$alldata_Test)
SubjID_14_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_14_MotorEM(2023)TEST_.mat")
SubjID_14_MotorEM_Test<-data.frame(SubjID_14_MotorEM_Test$alldata_Test)
SubjID_15_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_15_MotorEM(2023)TEST_.mat")
SubjID_15_MotorEM_Test<-data.frame(SubjID_15_MotorEM_Test$alldata_Test)
SubjID_16_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_16_MotorEM(2023)TEST_.mat")
SubjID_16_MotorEM_Test<-data.frame(SubjID_16_MotorEM_Test$alldata_Test)
SubjID_17_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_17_MotorEM(2023)TEST_.mat")
SubjID_17_MotorEM_Test<-data.frame(SubjID_17_MotorEM_Test$alldata_Test)
SubjID_18_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_18_MotorEM(2023)TEST_.mat")
SubjID_18_MotorEM_Test<-data.frame(SubjID_18_MotorEM_Test$alldata_Test)
SubjID_19_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_19_MotorEM(2023)TEST_.mat")
SubjID_19_MotorEM_Test<-data.frame(SubjID_19_MotorEM_Test$alldata_Test)
SubjID_20_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_20_MotorEM(2023)TEST_.mat")
SubjID_20_MotorEM_Test<-data.frame(SubjID_20_MotorEM_Test$alldata_Test)
SubjID_21_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_21_MotorEM(2023)TEST_.mat")
SubjID_21_MotorEM_Test<-data.frame(SubjID_21_MotorEM_Test$alldata_Test)
SubjID_22_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_22_MotorEM(2023)TEST_.mat")
SubjID_22_MotorEM_Test<-data.frame(SubjID_22_MotorEM_Test$alldata_Test)
SubjID_23_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_23_MotorEM(2023)TEST_.mat")
SubjID_23_MotorEM_Test<-data.frame(SubjID_23_MotorEM_Test$alldata_Test)
SubjID_24_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_24_MotorEM(2023)TEST_.mat")
SubjID_24_MotorEM_Test<-data.frame(SubjID_24_MotorEM_Test$alldata_Test)
SubjID_25_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_25_MotorEM(2023)TEST_.mat")
SubjID_25_MotorEM_Test<-data.frame(SubjID_25_MotorEM_Test$alldata_Test)
SubjID_26_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_26_MotorEM(2023)TEST_.mat")
SubjID_26_MotorEM_Test<-data.frame(SubjID_26_MotorEM_Test$alldata_Test)
cfg1<-data.frame(SubjID_26_MotorEM_Test[["cfg"]])
SubjID_27_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_27_MotorEM(2023)TEST_.mat")
SubjID_27_MotorEM_Test<-data.frame(SubjID_27_MotorEM_Test$alldata_Test)
SubjID_28_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_28_MotorEM(2023)TEST_.mat")
SubjID_28_MotorEM_Test<-data.frame(SubjID_28_MotorEM_Test$alldata_Test)
SubjID_29_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_29_MotorEM(2023)TEST_.mat")
SubjID_29_MotorEM_Test<-data.frame(SubjID_29_MotorEM_Test$alldata_Test)
SubjID_30_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_30_MotorEM(2023)TEST_.mat")
SubjID_30_MotorEM_Test<-data.frame(SubjID_30_MotorEM_Test$alldata_Test)
SubjID_31_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_31_MotorEM(2023)TEST_.mat")
SubjID_31_MotorEM_Test<-data.frame(SubjID_31_MotorEM_Test$alldata_Test)
data<-rbind(SubjID_1_MotorEM_Test,SubjID_2_MotorEM_Test,SubjID_3_MotorEM_Test,SubjID_4_MotorEM_Test,SubjID_5_MotorEM_Test,
SubjID_6_MotorEM_Test,SubjID_7_MotorEM_Test,SubjID_8_MotorEM_Test,SubjID_9_MotorEM_Test,SubjID_10_MotorEM_Test,
SubjID_11_MotorEM_Test,SubjID_12_MotorEM_Test,SubjID_13_MotorEM_Test,SubjID_14_MotorEM_Test,SubjID_15_MotorEM_Test,
SubjID_16_MotorEM_Test,SubjID_17_MotorEM_Test,SubjID_18_MotorEM_Test,SubjID_19_MotorEM_Test,SubjID_20_MotorEM_Test,
SubjID_21_MotorEM_Test,SubjID_22_MotorEM_Test,SubjID_23_MotorEM_Test,SubjID_24_MotorEM_Test,SubjID_25_MotorEM_Test,
SubjID_26_MotorEM_Test,SubjID_27_MotorEM_Test,SubjID_28_MotorEM_Test,SubjID_29_MotorEM_Test,SubjID_30_MotorEM_Test,
SubjID_31_MotorEM_Test)
colnames(data)<-c("SubjID","Age",   "Sex"  ,  "Block" ,   "Session"  ,  "Trial_Index"   , "Trial_Number" ,  "ITI"   ,
"ReactPeriod" ,   "Device" ,  "R_Lhanded"  , "MotorSide" , "MotorInvolvement",  "TrialTotalTime" ,   "ActionTiming",
"ActionDataDelayToStart" ,   "ActionDataDelayToEnd",   "ActionDataConfidenceReaction"  , "ActionDataConfidenceXaxis",
"ActionDataConfidenceYaxis"  ,  "HandDominance" ,  "ArmDominance"  ,   "LegDominance"  ,  "Motor_coordination",
"Gaming_frequency" , "Gaming_type"   ,  "Music" ,  "Inst_type"  , "CutOff",  "Std_Timing" ,   "Std_Reacting",    "Mean_Reacting",
"Feedback")
### Fixing - Cleaning the data
data$Inst_type[data$SubjID==29]<-0
data$Feedback[is.na(data$Feedback)] <- -1  # Use is.na() instead of == NA
data<-subset(data, ActionTiming!='NaN')
data$Block<-factor(data$Block)
levels(data$Block) <- list("ReactingG" = 2,        # Change factor levels
"TimingG" = 1)
data$Device<-factor(data$Device)
levels(data$Device) <- list("RightJoy" = 0,        # Change factor levels
"LeftJoy" = 1)
data$R_Lhanded<-factor(data$R_Lhanded)
levels(data$R_Lhanded) <- list("LHanded" = 2,        # Change factor levels
"RHanded" = 1)
data$MotorSide<-factor(data$MotorSide)
levels(data$MotorSide) <- list("DS" = 1,        # Change factor levels
"NDS" = 2)
data$MotorInvolvement<-factor(data$MotorInvolvement)
levels(data$MotorInvolvement) <- list("Move" = 1,        # Change factor levels
"Press" = 2)
data$SubjID<-factor(data$SubjID)
data_timing<- subset(data, Block== "TimingG" )
data_reacting<- subset(data, Block== "ReactingG" )
################################### Measures  ###################################
# Clean data a bit more:
## below 200 ms remove! Actual timings
data_timing <- subset(data_timing, ActionTiming >= 0.5)
data_timing <- ddply(data_timing, .(SubjID,Session), mutate, ActionTiming_z = (ActionTiming- mean(ActionTiming)) /sd(ActionTiming))
data_timing<- subset(data_timing, ActionTiming_z<3 & ActionTiming_z>-3)
data_reacting <- ddply(data_reacting, .(SubjID,Session), mutate, ActionTiming_z = (ActionTiming- mean(ActionTiming)) /sd(ActionTiming))
data_reacting<- subset(data_reacting, ActionTiming_z<3 &ActionTiming_z>-3)
data_timing <- ddply(data_timing, .(SubjID), mutate, ActionDataConfidenceReaction_z = (ActionDataConfidenceReaction- mean(ActionDataConfidenceReaction)) /sd(ActionDataConfidenceReaction))
data_timing<- subset(data_timing, ActionDataConfidenceReaction_z<3 &ActionDataConfidenceReaction_z>-3)
data_reacting <- ddply(data_reacting, .(SubjID), mutate, ActionDataConfidenceReaction_z = (ActionDataConfidenceReaction- mean(ActionDataConfidenceReaction)) /sd(ActionDataConfidenceReaction))
data_reacting<- subset(data_reacting, ActionDataConfidenceReaction_z<3 &ActionDataConfidenceReaction_z>-3)
# Group data and create confidence levels
data_timing$ActionDataConfidenceYaxis_percent = ((1275 - data_timing$ActionDataConfidenceYaxis) * 100) / 1200
data_reacting$ActionDataConfidenceYaxis_percent = ((1275 - data_reacting$ActionDataConfidenceYaxis) * 100) / 1200
data_timing$ActionDataConfidenceXaxis=(data_timing$ActionDataConfidenceXaxis/10)-120
data_reacting$ActionDataConfidenceXaxis=(data_reacting$ActionDataConfidenceXaxis/10)-120
data_timing$ActionDataConfidenceYaxis=-1*((data_timing$ActionDataConfidenceYaxis/10)-67.5)
data_reacting$ActionDataConfidenceYaxis=-1*((data_reacting$ActionDataConfidenceYaxis/10)-67.5)
group_and_conf_level <- function(data) {
data %>%
group_by(SubjID, Session) %>%
mutate(conf_level = ifelse(ActionDataConfidenceYaxis <= median(ActionDataConfidenceYaxis), "Low", "High")) %>%
mutate(conf_level = factor(conf_level, levels = c( "Low", "High"))) %>%
mutate(overall_motor_rate = Gaming_frequency + Motor_coordination) %>%
mutate(motor_rate = ifelse(overall_motor_rate <= median(overall_motor_rate), "Low", "High")) %>%
mutate(motor_rate = factor(motor_rate, levels = c("Low", "High")))
}
data_timing <- group_and_conf_level(data_timing)
data_reacting <- group_and_conf_level(data_reacting)
data_timing <- data_timing %>%                                        # Create SessionID by group
group_by(SubjID,Session) %>%
dplyr::mutate(SessionID = cur_group_id())
data_timing
library(dplyr)
data_timing <- data_timing %>%
group_by(SessionID) %>%  # Group by SessionID to isolate calculations
mutate(PreviousFeedback = lag(Feedback, 1)) %>%  # Use lag to get previous feedback for each session
ungroup() %>%
mutate(PreviousFeedback = ifelse(Trial_Number == 1, NA, PreviousFeedback))  # Set PreviousFeedback to NA for the first trial
length(unique(data_timing$PreviousFeedback[!is.na(data_timing$PreviousFeedback)]))
library(rmatio)
library(BiocManager)
library(installr)
library(lme4)
library(sjPlot)
library(car)
library(tidyverse)
library(devtools)
library(hrbrthemes)
library(viridis)
library(R.matlab)
library(readr)
library(broom.mixed)
library(ggplot2)
library(haven)
library(readr)
library(sjstats)
library(sjmisc)
library(sjlabelled)
library(gridExtra)
library(data.table)
library(gapminder)
library(rstatix)
library(scales)
library(tidyr)
library(emmeans)
library(plotly)
library(ggpubr)
library(dplyr)
library(plyr)
library(zoo)
library(patchwork)
library(R.matlab)
library(interactions)
library(lmerTest)
library(gridExtra)
library(Matrix)
library(rmatio)
library(cowplot)
library(reshape2)
library(ggeffects)
library(robust)
library(effects)
library(tableHTML)
library(magrittr)
library(ggbreak)
library(ggiraphExtra)
library(ggpmisc)
library(robustbase)
library(ggplotify)
library(ggplotlyExtra)
library(ggiraph)
library(jtools)
library(ggpmisc)
library(caret)
library(BBmisc)
library(splines)
library(ggforce)
library(ggdist)
library(gghalves)
library(ggbeeswarm)
library(BiocManager)
library(rhdf5)
# read in our data
SubjID_1_MotorEM_Test<- readMat("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_1_MotorEM(2023)TEST_.mat")
SubjID_1_MotorEM_Test<-data.frame(SubjID_1_MotorEM_Test[["alldata.Test"]])
cfg1<-data.frame(SubjID_1_MotorEM_Test[["cfg"]])
SubjID_2_MotorEM_Test <- readMat("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_2_MotorEM(2023)TEST_.mat")
SubjID_2_MotorEM_Test<-data.frame(SubjID_2_MotorEM_Test[["alldata.Test"]])
SubjID_3_MotorEM_Test <- readMat("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_3_MotorEM(2023)TEST_.mat")
SubjID_3_MotorEM_Test<-data.frame(SubjID_3_MotorEM_Test[["alldata.Test"]])
SubjID_4_MotorEM_Test <- readMat("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_4_MotorEM(2023)TEST_.mat")
SubjID_4_MotorEM_Test<-data.frame(SubjID_4_MotorEM_Test[["alldata.Test"]])
SubjID_5_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_5_MotorEM(2023)TEST_.mat")
SubjID_5_MotorEM_Test<-data.frame(SubjID_5_MotorEM_Test$alldata_Test)
SubjID_6_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_6_MotorEM(2023)TEST_.mat")
SubjID_6_MotorEM_Test<-data.frame(SubjID_6_MotorEM_Test$alldata_Test)
SubjID_7_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_7_MotorEM(2023)TEST_.mat")
SubjID_7_MotorEM_Test<-data.frame(SubjID_7_MotorEM_Test$alldata_Test)
SubjID_8_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_8_MotorEM(2023)TEST_.mat")
SubjID_8_MotorEM_Test<-data.frame(SubjID_8_MotorEM_Test$alldata_Test)
SubjID_9_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_9_MotorEM(2023)TEST_.mat")
SubjID_9_MotorEM_Test<-data.frame(SubjID_9_MotorEM_Test$alldata_Test)
SubjID_10_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_10_MotorEM(2023)TEST_.mat")
SubjID_10_MotorEM_Test<-data.frame(SubjID_10_MotorEM_Test$alldata_Test)
SubjID_11_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_11_MotorEM(2023)TEST_.mat")
SubjID_11_MotorEM_Test<-data.frame(SubjID_11_MotorEM_Test$alldata_Test)
SubjID_12_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_12_MotorEM(2023)TEST_.mat")
SubjID_12_MotorEM_Test<-data.frame(SubjID_12_MotorEM_Test$alldata_Test)
SubjID_13_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_13_MotorEM(2023)TEST_.mat")
SubjID_13_MotorEM_Test<-data.frame(SubjID_13_MotorEM_Test$alldata_Test)
SubjID_14_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_14_MotorEM(2023)TEST_.mat")
SubjID_14_MotorEM_Test<-data.frame(SubjID_14_MotorEM_Test$alldata_Test)
SubjID_15_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_15_MotorEM(2023)TEST_.mat")
SubjID_15_MotorEM_Test<-data.frame(SubjID_15_MotorEM_Test$alldata_Test)
SubjID_16_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_16_MotorEM(2023)TEST_.mat")
SubjID_16_MotorEM_Test<-data.frame(SubjID_16_MotorEM_Test$alldata_Test)
SubjID_17_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_17_MotorEM(2023)TEST_.mat")
SubjID_17_MotorEM_Test<-data.frame(SubjID_17_MotorEM_Test$alldata_Test)
SubjID_18_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_18_MotorEM(2023)TEST_.mat")
SubjID_18_MotorEM_Test<-data.frame(SubjID_18_MotorEM_Test$alldata_Test)
SubjID_19_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_19_MotorEM(2023)TEST_.mat")
SubjID_19_MotorEM_Test<-data.frame(SubjID_19_MotorEM_Test$alldata_Test)
SubjID_20_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_20_MotorEM(2023)TEST_.mat")
SubjID_20_MotorEM_Test<-data.frame(SubjID_20_MotorEM_Test$alldata_Test)
SubjID_21_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_21_MotorEM(2023)TEST_.mat")
SubjID_21_MotorEM_Test<-data.frame(SubjID_21_MotorEM_Test$alldata_Test)
SubjID_22_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_22_MotorEM(2023)TEST_.mat")
SubjID_22_MotorEM_Test<-data.frame(SubjID_22_MotorEM_Test$alldata_Test)
SubjID_23_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_23_MotorEM(2023)TEST_.mat")
SubjID_23_MotorEM_Test<-data.frame(SubjID_23_MotorEM_Test$alldata_Test)
SubjID_24_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_24_MotorEM(2023)TEST_.mat")
SubjID_24_MotorEM_Test<-data.frame(SubjID_24_MotorEM_Test$alldata_Test)
SubjID_25_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_25_MotorEM(2023)TEST_.mat")
SubjID_25_MotorEM_Test<-data.frame(SubjID_25_MotorEM_Test$alldata_Test)
SubjID_26_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_26_MotorEM(2023)TEST_.mat")
SubjID_26_MotorEM_Test<-data.frame(SubjID_26_MotorEM_Test$alldata_Test)
cfg1<-data.frame(SubjID_26_MotorEM_Test[["cfg"]])
SubjID_27_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_27_MotorEM(2023)TEST_.mat")
SubjID_27_MotorEM_Test<-data.frame(SubjID_27_MotorEM_Test$alldata_Test)
SubjID_28_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_28_MotorEM(2023)TEST_.mat")
SubjID_28_MotorEM_Test<-data.frame(SubjID_28_MotorEM_Test$alldata_Test)
SubjID_29_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_29_MotorEM(2023)TEST_.mat")
SubjID_29_MotorEM_Test<-data.frame(SubjID_29_MotorEM_Test$alldata_Test)
SubjID_30_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_30_MotorEM(2023)TEST_.mat")
SubjID_30_MotorEM_Test<-data.frame(SubjID_30_MotorEM_Test$alldata_Test)
SubjID_31_MotorEM_Test <- H5Fopen("/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Data-Mat-files/MotorEM(2023)_SubjID_31_MotorEM(2023)TEST_.mat")
SubjID_31_MotorEM_Test<-data.frame(SubjID_31_MotorEM_Test$alldata_Test)
data<-rbind(SubjID_1_MotorEM_Test,SubjID_2_MotorEM_Test,SubjID_3_MotorEM_Test,SubjID_4_MotorEM_Test,SubjID_5_MotorEM_Test,
SubjID_6_MotorEM_Test,SubjID_7_MotorEM_Test,SubjID_8_MotorEM_Test,SubjID_9_MotorEM_Test,SubjID_10_MotorEM_Test,
SubjID_11_MotorEM_Test,SubjID_12_MotorEM_Test,SubjID_13_MotorEM_Test,SubjID_14_MotorEM_Test,SubjID_15_MotorEM_Test,
SubjID_16_MotorEM_Test,SubjID_17_MotorEM_Test,SubjID_18_MotorEM_Test,SubjID_19_MotorEM_Test,SubjID_20_MotorEM_Test,
SubjID_21_MotorEM_Test,SubjID_22_MotorEM_Test,SubjID_23_MotorEM_Test,SubjID_24_MotorEM_Test,SubjID_25_MotorEM_Test,
SubjID_26_MotorEM_Test,SubjID_27_MotorEM_Test,SubjID_28_MotorEM_Test,SubjID_29_MotorEM_Test,SubjID_30_MotorEM_Test,
SubjID_31_MotorEM_Test)
colnames(data)<-c("SubjID","Age",   "Sex"  ,  "Block" ,   "Session"  ,  "Trial_Index"   , "Trial_Number" ,  "ITI"   ,
"ReactPeriod" ,   "Device" ,  "R_Lhanded"  , "MotorSide" , "MotorInvolvement",  "TrialTotalTime" ,   "ActionTiming",
"ActionDataDelayToStart" ,   "ActionDataDelayToEnd",   "ActionDataConfidenceReaction"  , "ActionDataConfidenceXaxis",
"ActionDataConfidenceYaxis"  ,  "HandDominance" ,  "ArmDominance"  ,   "LegDominance"  ,  "Motor_coordination",
"Gaming_frequency" , "Gaming_type"   ,  "Music" ,  "Inst_type"  , "CutOff",  "Std_Timing" ,   "Std_Reacting",    "Mean_Reacting",
"Feedback")
### Fixing - Cleaning the data
data$Inst_type[data$SubjID==29]<-0
data$Feedback[is.na(data$Feedback)] <- -1  # Use is.na() instead of == NA
data<-subset(data, ActionTiming!='NaN')
data$Block<-factor(data$Block)
levels(data$Block) <- list("ReactingG" = 2,        # Change factor levels
"TimingG" = 1)
data$Device<-factor(data$Device)
levels(data$Device) <- list("RightJoy" = 0,        # Change factor levels
"LeftJoy" = 1)
data$R_Lhanded<-factor(data$R_Lhanded)
levels(data$R_Lhanded) <- list("LHanded" = 2,        # Change factor levels
"RHanded" = 1)
data$MotorSide<-factor(data$MotorSide)
levels(data$MotorSide) <- list("DS" = 1,        # Change factor levels
"NDS" = 2)
data$MotorInvolvement<-factor(data$MotorInvolvement)
levels(data$MotorInvolvement) <- list("Move" = 1,        # Change factor levels
"Press" = 2)
data$SubjID<-factor(data$SubjID)
data_timing<- subset(data, Block== "TimingG" )
data_reacting<- subset(data, Block== "ReactingG" )
################################### Measures  ###################################
# Clean data a bit more:
## below 200 ms remove! Actual timings
data_timing <- subset(data_timing, ActionTiming >= 0.5)
data_timing <- ddply(data_timing, .(SubjID,Session), mutate, ActionTiming_z = (ActionTiming- mean(ActionTiming)) /sd(ActionTiming))
data_timing<- subset(data_timing, ActionTiming_z<3 & ActionTiming_z>-3)
data_reacting <- ddply(data_reacting, .(SubjID,Session), mutate, ActionTiming_z = (ActionTiming- mean(ActionTiming)) /sd(ActionTiming))
data_reacting<- subset(data_reacting, ActionTiming_z<3 &ActionTiming_z>-3)
data_timing <- ddply(data_timing, .(SubjID), mutate, ActionDataConfidenceReaction_z = (ActionDataConfidenceReaction- mean(ActionDataConfidenceReaction)) /sd(ActionDataConfidenceReaction))
data_timing<- subset(data_timing, ActionDataConfidenceReaction_z<3 &ActionDataConfidenceReaction_z>-3)
data_reacting <- ddply(data_reacting, .(SubjID), mutate, ActionDataConfidenceReaction_z = (ActionDataConfidenceReaction- mean(ActionDataConfidenceReaction)) /sd(ActionDataConfidenceReaction))
data_reacting<- subset(data_reacting, ActionDataConfidenceReaction_z<3 &ActionDataConfidenceReaction_z>-3)
# Group data and create confidence levels
data_timing$ActionDataConfidenceYaxis_percent = ((1275 - data_timing$ActionDataConfidenceYaxis) * 100) / 1200
data_reacting$ActionDataConfidenceYaxis_percent = ((1275 - data_reacting$ActionDataConfidenceYaxis) * 100) / 1200
data_timing$ActionDataConfidenceXaxis=(data_timing$ActionDataConfidenceXaxis/10)-120
data_reacting$ActionDataConfidenceXaxis=(data_reacting$ActionDataConfidenceXaxis/10)-120
data_timing$ActionDataConfidenceYaxis=-1*((data_timing$ActionDataConfidenceYaxis/10)-67.5)
data_reacting$ActionDataConfidenceYaxis=-1*((data_reacting$ActionDataConfidenceYaxis/10)-67.5)
group_and_conf_level <- function(data) {
data %>%
group_by(SubjID, Session) %>%
mutate(conf_level = ifelse(ActionDataConfidenceYaxis <= median(ActionDataConfidenceYaxis), "Low", "High")) %>%
mutate(conf_level = factor(conf_level, levels = c( "Low", "High"))) %>%
mutate(overall_motor_rate = Gaming_frequency + Motor_coordination) %>%
mutate(motor_rate = ifelse(overall_motor_rate <= median(overall_motor_rate), "Low", "High")) %>%
mutate(motor_rate = factor(motor_rate, levels = c("Low", "High")))
}
data_timing <- group_and_conf_level(data_timing)
data_reacting <- group_and_conf_level(data_reacting)
###################################################### SAVE THE ALL DATA SET  TRIM ####################################################################################################
fwrite(data_timing, "/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Scripts&Data-Frames/data_timing.csv")
fwrite(data_reacting, "/Users/xenanurbilgin/XENA_FOLDERS/PHD-MOTOR-2023/Scripts&Data-Frames/data_reacting.csv")
################################### Measures  ###################################
total_data=rbind(data_timing,data_reacting)
total_data <- total_data %>%                                        # Create SessionID by group
group_by(SubjID,Session) %>%
dplyr::mutate(SessionID = cur_group_id())
total_data
data_count <- ddply(total_data, .(SubjID), summarize, total_session = length(unique(Session)))
total_session_count <- sum(data_count$total_session)
data_count_hand <- ddply(total_data, .(SubjID), summarize, R_L = (unique(R_Lhanded)))
data_count_hand
